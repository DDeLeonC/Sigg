/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Persistencia.FachadaPersistencia;
import dominio.Animal;
import dominio.Corral;
import dominio.Dieta;
import dominio.Insumo;
import dominio.Productor;
import java.util.List;
import java.util.Observable;
import java.util.Observer;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author diego
 */
public class Listados extends javax.swing.JInternalFrame {

    /**
     * Creates new form Listados
     */
    public Listados() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        btnListarCorral = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListarCorral = new javax.swing.JTable();
        chFiltroCorral = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        btnListarAnimal = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblListadoAnimal = new javax.swing.JTable();
        chFiltroAnimal = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        btnListarProductor = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblListadoProductor = new javax.swing.JTable();
        chFiltroProductor = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        btnListarInsumos = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblListadoInsumo = new javax.swing.JTable();
        chFiltroInsumo = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        btnListarDieta = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblListadoDieta = new javax.swing.JTable();
        chFiltroDieta = new javax.swing.JCheckBox();

        setBackground(java.awt.Color.lightGray);
        setClosable(true);
        setMaximumSize(new java.awt.Dimension(670, 500));
        setMinimumSize(new java.awt.Dimension(670, 500));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(670, 500));

        jTabbedPane1.setBackground(new java.awt.Color(119, 137, 186));

        jPanel1.setBackground(new java.awt.Color(119, 137, 186));

        btnListarCorral.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/listar2.png"))); // NOI18N
        btnListarCorral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarCorralActionPerformed(evt);
            }
        });

        tblListarCorral.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Capacidad", "Observaciones", "Estado"
            }
        ));
        jScrollPane1.setViewportView(tblListarCorral);
        tblListarCorral.getColumnModel().getColumn(0).setMinWidth(50);
        tblListarCorral.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblListarCorral.getColumnModel().getColumn(0).setMaxWidth(50);

        chFiltroCorral.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        chFiltroCorral.setText("Mostrar solo los activos");
        chFiltroCorral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chFiltroCorralActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnListarCorral)
                .addGap(18, 18, 18)
                .addComponent(chFiltroCorral)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnListarCorral)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chFiltroCorral)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Corral", jPanel1);

        jPanel2.setBackground(new java.awt.Color(119, 137, 186));

        btnListarAnimal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/listar2.png"))); // NOI18N
        btnListarAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarAnimalActionPerformed(evt);
            }
        });

        tblListadoAnimal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nro Caravana", "Peso Actual", "Estado", "Productor"
            }
        ));
        jScrollPane2.setViewportView(tblListadoAnimal);
        tblListadoAnimal.getColumnModel().getColumn(0).setMinWidth(50);
        tblListadoAnimal.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblListadoAnimal.getColumnModel().getColumn(0).setMaxWidth(50);

        chFiltroAnimal.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        chFiltroAnimal.setText("Mostrar solo los activos");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(btnListarAnimal)
                .addGap(18, 18, 18)
                .addComponent(chFiltroAnimal)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnListarAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chFiltroAnimal)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Animal", jPanel2);

        jPanel3.setBackground(new java.awt.Color(119, 137, 186));

        btnListarProductor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/listar2.png"))); // NOI18N
        btnListarProductor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarProductorActionPerformed(evt);
            }
        });

        tblListadoProductor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Produce", "Telefono", "E-mail", "Direcci√≥n", "Estado"
            }
        ));
        jScrollPane3.setViewportView(tblListadoProductor);
        tblListadoProductor.getColumnModel().getColumn(0).setMinWidth(50);
        tblListadoProductor.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblListadoProductor.getColumnModel().getColumn(0).setMaxWidth(50);

        chFiltroProductor.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        chFiltroProductor.setText("Mostrar solo los activos");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(btnListarProductor)
                .addGap(18, 18, 18)
                .addComponent(chFiltroProductor)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnListarProductor, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chFiltroProductor)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Productor", jPanel3);

        jPanel4.setBackground(new java.awt.Color(119, 137, 186));

        btnListarInsumos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/listar2.png"))); // NOI18N
        btnListarInsumos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarInsumosActionPerformed(evt);
            }
        });

        tblListadoInsumo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Stock", "Humedad", "Estado"
            }
        ));
        jScrollPane4.setViewportView(tblListadoInsumo);
        tblListadoInsumo.getColumnModel().getColumn(0).setMinWidth(50);
        tblListadoInsumo.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblListadoInsumo.getColumnModel().getColumn(0).setMaxWidth(50);

        chFiltroInsumo.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        chFiltroInsumo.setText("Mostrar solo los activos");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(btnListarInsumos)
                .addGap(18, 18, 18)
                .addComponent(chFiltroInsumo)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnListarInsumos, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chFiltroInsumo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Insumo", jPanel4);

        jPanel5.setBackground(new java.awt.Color(119, 137, 186));

        btnListarDieta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/listar2.png"))); // NOI18N
        btnListarDieta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarDietaActionPerformed(evt);
            }
        });

        tblListadoDieta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Tipo", "Costo", "Estado"
            }
        ));
        jScrollPane5.setViewportView(tblListadoDieta);
        tblListadoDieta.getColumnModel().getColumn(0).setMinWidth(50);
        tblListadoDieta.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblListadoDieta.getColumnModel().getColumn(0).setMaxWidth(50);

        chFiltroDieta.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        chFiltroDieta.setText("Mostrar solo los activos");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(btnListarDieta)
                .addGap(18, 18, 18)
                .addComponent(chFiltroDieta)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 651, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnListarDieta, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chFiltroDieta)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Dieta", jPanel5);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnListarAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarAnimalActionPerformed
        if (chFiltroAnimal.isSelected()) {
            listarHabilitados(Animal.class, tblListadoAnimal, mdl_animal);
        } else {
            listar(Animal.class, tblListadoAnimal, mdl_animal);
        }
    }//GEN-LAST:event_btnListarAnimalActionPerformed

    private void btnListarCorralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarCorralActionPerformed
        if (chFiltroCorral.isSelected()) {
            listarHabilitados(Corral.class, tblListarCorral, mdl_corral);
        } else {
            listar(Corral.class, tblListarCorral, mdl_corral);
        }
    }//GEN-LAST:event_btnListarCorralActionPerformed

    private void btnListarInsumosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarInsumosActionPerformed
        if (chFiltroInsumo.isSelected()) {
            listarHabilitados(Insumo.class, tblListadoInsumo, mdl_insumo);
        } else {
            listar(Insumo.class, tblListadoInsumo, mdl_insumo);
        }
    }//GEN-LAST:event_btnListarInsumosActionPerformed

    private void btnListarDietaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarDietaActionPerformed
        if (chFiltroDieta.isSelected()) {
            listarHabilitados(Dieta.class, tblListadoDieta, mdl_dieta);
        } else {
            listar(Dieta.class, tblListadoDieta, mdl_dieta);
        }
    }//GEN-LAST:event_btnListarDietaActionPerformed

    private void btnListarProductorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarProductorActionPerformed
        if (chFiltroProductor.isSelected()) {
            listarHabilitados(Productor.class, tblListadoProductor, mdl_productor);
        } else {
            listar(Productor.class, tblListadoProductor, mdl_productor);
        }
    }//GEN-LAST:event_btnListarProductorActionPerformed

    private void chFiltroCorralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chFiltroCorralActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chFiltroCorralActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnListarAnimal;
    private javax.swing.JButton btnListarCorral;
    private javax.swing.JButton btnListarDieta;
    private javax.swing.JButton btnListarInsumos;
    private javax.swing.JButton btnListarProductor;
    private javax.swing.JCheckBox chFiltroAnimal;
    private javax.swing.JCheckBox chFiltroCorral;
    private javax.swing.JCheckBox chFiltroDieta;
    private javax.swing.JCheckBox chFiltroInsumo;
    private javax.swing.JCheckBox chFiltroProductor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblListadoAnimal;
    private javax.swing.JTable tblListadoDieta;
    private javax.swing.JTable tblListadoInsumo;
    private javax.swing.JTable tblListadoProductor;
    private javax.swing.JTable tblListarCorral;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel mdl_corral = new DefaultTableModel(new String[]{"ID", "Nombre", "Capacidad", "Observaciones", "Estado"}, 0);
    DefaultTableModel mdl_animal = new DefaultTableModel(new String[]{"ID", "Nro Caravana", "Peso actual", "Estado", "Productor"}, 0);
    DefaultTableModel mdl_productor = new DefaultTableModel(new String[]{"ID", "Nombre", "Produce", "Telefono", "Email", "Direccion", "Estado"}, 0);
    DefaultTableModel mdl_dieta = new DefaultTableModel(new String[]{"ID", "Nombre", "Tipo", "Costo", "Estado"}, 0);
    DefaultTableModel mdl_insumo = new DefaultTableModel(new String[]{"ID", "Nombre", "Stock", "Humedad", "Estado"}, 0);

    public void listar(Object obj, JTable t, DefaultTableModel d) {

        limpiar_tabla(d);
        List<Object> lista = null;
        t.setModel(d);
        t.getColumnModel().getColumn(0).setMaxWidth(50);
        if (obj == Corral.class) {
            lista = FachadaPersistencia.getInstancia().listar(Corral.class);
            for (Object o : lista) {
                Corral c = (Corral) o;
                d.addRow(new Object[]{c.getId(), c.getNombre(), c.getCapacidad(), c.getObservaciones(), c.getEstado()});
            }
        } else if (obj == Animal.class) {
            lista = FachadaPersistencia.getInstancia().listar(Animal.class);
            for (Object o : lista) {
                Animal a = (Animal) o;
                d.addRow(new Object[]{a.getId(), a.getNroCaravana(), a.getPesoActual(), a.getEstado(), a.getProductor().getNombre()});
            }
        } else if (obj == Productor.class) {
            lista = FachadaPersistencia.getInstancia().listar(Productor.class);
            for (Object o : lista) {
                Productor p = (Productor) o;
                String aux;
                if (p.isProduce()) {
                    aux = "PRODUCE";
                } else {
                    aux = "NO PRODUCE";
                }
                d.addRow(new Object[]{p.getId(), p.getNombre(), aux, p.getTelefono(), p.getEmail(), p.getDireccion(), p.getEstado()});
            }
        } else if (obj == Dieta.class) {
            lista = FachadaPersistencia.getInstancia().listar(Dieta.class);
            for (Object o : lista) {
                Dieta dt = (Dieta) o;
                d.addRow(new Object[]{dt.getId(), dt.getNombre(), dt.getTipo(), dt.getCosto(), dt.getEstado()});
            }
        } else if (obj == Insumo.class) {
            lista = FachadaPersistencia.getInstancia().listar(Insumo.class);
            for (Object o : lista) {
                Insumo i = (Insumo) o;
                d.addRow(new Object[]{i.getId(), i.getNombre(), i.getStock(), i.getHumedad(), i.getEstado()});
            }
        }
    }

    private void limpiar_tabla(DefaultTableModel d) {
        while (d.getRowCount() > 0) {
            d.removeRow(0);
        }

    }

    private void listarHabilitados(Object obj, JTable t, DefaultTableModel d) {

        limpiar_tabla(d);
        List<Object> lista = null;
        t.setModel(d);
        t.getColumnModel().getColumn(0).setMaxWidth(50);
        if (obj == Corral.class) {
            lista = FachadaPersistencia.getInstancia().listadoHabilitados(Corral.class);
            if (lista.size() == 0) {
                JOptionPane.showMessageDialog(null, "No existen corrales para listar.");
            }
            for (Object o : lista) {
                Corral c = (Corral) o;
                d.addRow(new Object[]{c.getId(), c.getNombre(), c.getCapacidad(), c.getObservaciones(), c.getEstado()});
            }
        } else if (obj == Animal.class) {
            lista = FachadaPersistencia.getInstancia().listadoHabilitados(Animal.class);
            if (lista.size() == 0) {
                JOptionPane.showMessageDialog(null, "No existen animales para listar.");
            }
            for (Object o : lista) {
                Animal a = (Animal) o;
                d.addRow(new Object[]{a.getId(), a.getNroCaravana(), a.getPesoActual(), a.getEstado(), a.getProductor().getNombre()});
            }
        } else if (obj == Productor.class) {
            lista = FachadaPersistencia.getInstancia().listadoHabilitados(Productor.class);
            if (lista.size() == 0) {
                JOptionPane.showMessageDialog(null, "No existen productores para listar.");
            }
            for (Object o : lista) {
                Productor p = (Productor) o;
                String aux;
                if (p.isProduce()) {
                    aux = "PRODUCE";
                } else {
                    aux = "NO PRODUCE";
                }
                d.addRow(new Object[]{p.getId(), p.getNombre(), aux, p.getTelefono(), p.getEmail(), p.getDireccion(), p.getEstado()});
            }
        } else if (obj == Dieta.class) {
            lista = FachadaPersistencia.getInstancia().listadoHabilitados(Dieta.class);
            if (lista.size() == 0) {
                JOptionPane.showMessageDialog(null, "No existen dietas para listar.");
            }
            for (Object o : lista) {
                Dieta dt = (Dieta) o;
                d.addRow(new Object[]{dt.getId(), dt.getNombre(), dt.getTipo(), dt.getCosto(), dt.getEstado()});
            }
        } else if (obj == Insumo.class) {
            lista = FachadaPersistencia.getInstancia().listadoHabilitados(Insumo.class);
            if (lista.size() == 0) {
                JOptionPane.showMessageDialog(null, "No existen insumos para listar.");
            }
            for (Object o : lista) {
                Insumo i = (Insumo) o;
                d.addRow(new Object[]{i.getId(), i.getNombre(), i.getStock(), i.getHumedad(), i.getEstado()});
            }
        }
    }
}
