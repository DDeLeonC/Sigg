/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Presentacion;

import Persistencia.FachadaPersistencia;
import com.sun.org.apache.bcel.internal.generic.FADD;
import dominio.Animal;
import dominio.CategoriaAnimal;
import dominio.Corral;
import dominio.DetalleDieta;
import dominio.Dieta;
import dominio.Insumo;
import dominio.Productor;
import java.util.List;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.NoResultException;
import javax.persistence.Persistence;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import dominio.CambioStock;
import java.awt.TextField;
import java.util.Date;
import java.util.Observable;
import java.util.Observer;
import javax.swing.JCheckBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author diego
 */
public class Mantenimientos extends javax.swing.JInternalFrame implements Observer {

    /**
     * Creates new form Mantenimientos
     */
    public Mantenimientos() {
        initComponents();
        cargar_combos();
        cargar_listas();
        FachadaPersistencia.getInstancia().addObserver(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        tblmantenimientos = new javax.swing.JTabbedPane();
        tblInsumo = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtNombreInsumo = new javax.swing.JTextField();
        txtHumedadInsumo = new javax.swing.JTextField();
        btnGuardarInsumo = new javax.swing.JButton();
        btnBuscarInsumo = new javax.swing.JButton();
        btnEliminarInsumo = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        lblEstadoInsumo = new javax.swing.JLabel();
        txtPrecioInsumo = new javax.swing.JTextField();
        tblCorral = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNombreCorral = new javax.swing.JTextField();
        txtCapacidadCorral = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObservacionesCorral = new javax.swing.JTextArea();
        btnGuardarCorral = new javax.swing.JButton();
        btnBuscarCorral = new javax.swing.JButton();
        btnEliminarCorral = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        lblEstadoCorral = new javax.swing.JLabel();
        tblCategoria = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtNombreCategoria = new javax.swing.JTextField();
        txtDiasCategoria = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtObservacionesCategoria = new javax.swing.JTextArea();
        btnGuardarCategoria = new javax.swing.JButton();
        btnBuscarCategoria = new javax.swing.JButton();
        btnEliminarCategoria = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        lblEstadoCategoria = new javax.swing.JLabel();
        tblDieta = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtNombreDieta = new javax.swing.JTextField();
        btnGuardarDieta = new javax.swing.JButton();
        btnBuscatDieta = new javax.swing.JButton();
        btnEliminarDieta = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        lblEstadoDieta = new javax.swing.JLabel();
        cboTipoDieta = new javax.swing.JComboBox();
        txtDuracionDieta = new javax.swing.JTextField();
        btnSumarInsumo = new javax.swing.JButton();
        btnRestarInsumo = new javax.swing.JButton();
        cboPosibles = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblInsumos = new javax.swing.JTable();
        txtPorcentaje = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        tblProductor = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txtNombreProductor = new javax.swing.JTextField();
        txtTelefonoProductor = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtObservacionesProductor = new javax.swing.JTextArea();
        btnGuardarProductor = new javax.swing.JButton();
        btnBuscarProductor = new javax.swing.JButton();
        btnEliminarProductor = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        lblEstadoProductor = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        txtMailProductor = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtDireccionProductor = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        chkSI = new javax.swing.JCheckBox();
        chkNo = new javax.swing.JCheckBox();
        jLabel36 = new javax.swing.JLabel();
        txtDicose = new javax.swing.JTextField();
        tblStock = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        txtInsumoStock = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        txtModificacionStock = new javax.swing.JTextField();
        btnEgresoStock = new javax.swing.JButton();
        btnIngresoStock = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtObservacionesStock = new javax.swing.JTextPane();
        lblStockActual = new javax.swing.JLabel();
        btnBuscarStock = new javax.swing.JButton();
        tblAnimal = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtNroAnimal = new javax.swing.JTextField();
        txtPesoIngAnimal = new javax.swing.JTextField();
        btnGuardarAnimal = new javax.swing.JButton();
        btnBuscarAnimal = new javax.swing.JButton();
        btnEliminarAnimal = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        lblEstadoAnimal = new javax.swing.JLabel();
        txtPesoActAnimal = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        cboCategoriaAnimal = new javax.swing.JComboBox();
        cboProductor = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        txtNtoTropa = new javax.swing.JTextField();
        txtFechaIngreso = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        lblDocumento = new javax.swing.JLabel();
        btnAbrirDocumento = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setClosable(true);
        setMaximumSize(new java.awt.Dimension(500, 400));
        setMinimumSize(new java.awt.Dimension(500, 400));
        setPreferredSize(new java.awt.Dimension(500, 400));

        tblmantenimientos.setBackground(new java.awt.Color(101, 175, 84));

        tblInsumo.setBackground(new java.awt.Color(101, 175, 84));

        jLabel17.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel17.setText("Nombre:");

        jLabel18.setFont(jLabel18.getFont().deriveFont(jLabel18.getFont().getStyle() | java.awt.Font.BOLD));
        jLabel18.setText("HÃºmedad (%):");

        jLabel19.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel19.setText("Precio (U$S/Tonelada):");

        btnGuardarInsumo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/save32.png"))); // NOI18N
        btnGuardarInsumo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarInsumoActionPerformed(evt);
            }
        });

        btnBuscarInsumo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/search32.png"))); // NOI18N
        btnBuscarInsumo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarInsumoActionPerformed(evt);
            }
        });

        btnEliminarInsumo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/delete32.png"))); // NOI18N
        btnEliminarInsumo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarInsumoActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel20.setText("Estado:");

        lblEstadoInsumo.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblEstadoInsumo.setText("...");

        javax.swing.GroupLayout tblInsumoLayout = new javax.swing.GroupLayout(tblInsumo);
        tblInsumo.setLayout(tblInsumoLayout);
        tblInsumoLayout.setHorizontalGroup(
            tblInsumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblInsumoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tblInsumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(tblInsumoLayout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addGap(18, 18, 18)
                        .addComponent(txtPrecioInsumo))
                    .addGroup(tblInsumoLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addGap(18, 18, 18)
                        .addComponent(txtNombreInsumo, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tblInsumoLayout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblEstadoInsumo))
                    .addGroup(tblInsumoLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addGap(18, 18, 18)
                        .addComponent(txtHumedadInsumo, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(tblInsumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGuardarInsumo)
                    .addComponent(btnBuscarInsumo)
                    .addComponent(btnEliminarInsumo))
                .addContainerGap(48, Short.MAX_VALUE))
        );
        tblInsumoLayout.setVerticalGroup(
            tblInsumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblInsumoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tblInsumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tblInsumoLayout.createSequentialGroup()
                        .addGroup(tblInsumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(txtNombreInsumo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(tblInsumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(txtHumedadInsumo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(tblInsumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(txtPrecioInsumo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(tblInsumoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(lblEstadoInsumo)))
                    .addGroup(tblInsumoLayout.createSequentialGroup()
                        .addComponent(btnGuardarInsumo)
                        .addGap(12, 12, 12)
                        .addComponent(btnBuscarInsumo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminarInsumo)))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        tblmantenimientos.addTab("Insumo", tblInsumo);

        tblCorral.setBackground(new java.awt.Color(101, 175, 84));

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel1.setText("Nombre:");

        jLabel2.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel2.setText("Capacidad:");

        jLabel3.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel3.setText("Observaciones:");

        txtObservacionesCorral.setColumns(15);
        txtObservacionesCorral.setRows(4);
        jScrollPane1.setViewportView(txtObservacionesCorral);

        btnGuardarCorral.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/save32.png"))); // NOI18N
        btnGuardarCorral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCorralActionPerformed(evt);
            }
        });

        btnBuscarCorral.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/search32.png"))); // NOI18N
        btnBuscarCorral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCorralActionPerformed(evt);
            }
        });

        btnEliminarCorral.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/delete32.png"))); // NOI18N
        btnEliminarCorral.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCorralActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel4.setText("Estado:");

        lblEstadoCorral.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblEstadoCorral.setText("...");

        javax.swing.GroupLayout tblCorralLayout = new javax.swing.GroupLayout(tblCorral);
        tblCorral.setLayout(tblCorralLayout);
        tblCorralLayout.setHorizontalGroup(
            tblCorralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblCorralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tblCorralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addGroup(tblCorralLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblEstadoCorral))
                    .addGroup(tblCorralLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtNombreCorral, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tblCorralLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtCapacidadCorral))
                    .addComponent(jScrollPane1))
                .addGap(18, 18, 18)
                .addGroup(tblCorralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnEliminarCorral)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tblCorralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnGuardarCorral)
                        .addComponent(btnBuscarCorral)))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        tblCorralLayout.setVerticalGroup(
            tblCorralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblCorralLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tblCorralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tblCorralLayout.createSequentialGroup()
                        .addComponent(btnGuardarCorral)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscarCorral)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminarCorral))
                    .addGroup(tblCorralLayout.createSequentialGroup()
                        .addGroup(tblCorralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtNombreCorral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(tblCorralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtCapacidadCorral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(tblCorralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(lblEstadoCorral))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblmantenimientos.addTab("Corral", tblCorral);

        tblCategoria.setBackground(new java.awt.Color(101, 175, 84));

        jLabel9.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel9.setText("Nombre:");

        jLabel10.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel10.setText("DÃ­as:");

        jLabel11.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel11.setText("Observaciones:");

        txtObservacionesCategoria.setColumns(15);
        txtObservacionesCategoria.setRows(4);
        jScrollPane3.setViewportView(txtObservacionesCategoria);

        btnGuardarCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/save32.png"))); // NOI18N
        btnGuardarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCategoriaActionPerformed(evt);
            }
        });

        btnBuscarCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/search32.png"))); // NOI18N
        btnBuscarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCategoriaActionPerformed(evt);
            }
        });

        btnEliminarCategoria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/delete32.png"))); // NOI18N
        btnEliminarCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCategoriaActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel12.setText("Estado:");

        lblEstadoCategoria.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblEstadoCategoria.setText("...");

        javax.swing.GroupLayout tblCategoriaLayout = new javax.swing.GroupLayout(tblCategoria);
        tblCategoria.setLayout(tblCategoriaLayout);
        tblCategoriaLayout.setHorizontalGroup(
            tblCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblCategoriaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tblCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tblCategoriaLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblEstadoCategoria))
                    .addGroup(tblCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tblCategoriaLayout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addGap(18, 18, 18)
                            .addComponent(txtDiasCategoria))
                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, tblCategoriaLayout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addGap(18, 18, 18)
                            .addComponent(txtNombreCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(tblCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminarCategoria)
                    .addComponent(btnGuardarCategoria)
                    .addComponent(btnBuscarCategoria))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        tblCategoriaLayout.setVerticalGroup(
            tblCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblCategoriaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tblCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tblCategoriaLayout.createSequentialGroup()
                        .addComponent(btnGuardarCategoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscarCategoria)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminarCategoria))
                    .addGroup(tblCategoriaLayout.createSequentialGroup()
                        .addGroup(tblCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtNombreCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(tblCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtDiasCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(tblCategoriaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(lblEstadoCategoria))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblmantenimientos.addTab("Categoria", tblCategoria);

        tblDieta.setBackground(new java.awt.Color(101, 175, 84));

        jLabel13.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel13.setText("Nombre:");

        jLabel14.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel14.setText("Tipo:");

        jLabel15.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel15.setText("DuraciÃ³n (dÃ­as):");

        btnGuardarDieta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/save32.png"))); // NOI18N
        btnGuardarDieta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarDietaActionPerformed(evt);
            }
        });

        btnBuscatDieta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/search32.png"))); // NOI18N
        btnBuscatDieta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscatDietaActionPerformed(evt);
            }
        });

        btnEliminarDieta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/delete32.png"))); // NOI18N
        btnEliminarDieta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarDietaActionPerformed(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel16.setText("Estado:");

        lblEstadoDieta.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblEstadoDieta.setText("...");

        cboTipoDieta.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtDuracionDieta.setText("0");

        btnSumarInsumo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/Down24.png"))); // NOI18N
        btnSumarInsumo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSumarInsumoActionPerformed(evt);
            }
        });

        btnRestarInsumo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/Up24.png"))); // NOI18N
        btnRestarInsumo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestarInsumoActionPerformed(evt);
            }
        });

        cboPosibles.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tblInsumos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Insumo", "%"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblInsumos);
        tblInsumos.getColumnModel().getColumn(0).setPreferredWidth(10);
        tblInsumos.getColumnModel().getColumn(1).setPreferredWidth(60);
        tblInsumos.getColumnModel().getColumn(2).setPreferredWidth(20);

        txtPorcentaje.setText("0");

        jLabel30.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel30.setText("Porcentaje (%):");

        jLabel35.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel35.setText("Insumos:");

        javax.swing.GroupLayout tblDietaLayout = new javax.swing.GroupLayout(tblDieta);
        tblDieta.setLayout(tblDietaLayout);
        tblDietaLayout.setHorizontalGroup(
            tblDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblDietaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tblDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tblDietaLayout.createSequentialGroup()
                        .addGroup(tblDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tblDietaLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(txtNombreDieta, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(tblDietaLayout.createSequentialGroup()
                                .addGroup(tblDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel16)
                                    .addComponent(jLabel14))
                                .addGap(18, 18, 18)
                                .addGroup(tblDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(tblDietaLayout.createSequentialGroup()
                                        .addComponent(lblEstadoDieta)
                                        .addGap(86, 86, 86)
                                        .addComponent(jLabel15)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtDuracionDieta, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cboTipoDieta, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(tblDietaLayout.createSequentialGroup()
                                .addGap(143, 143, 143)
                                .addComponent(btnSumarInsumo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnRestarInsumo))
                            .addComponent(jLabel35)
                            .addGroup(tblDietaLayout.createSequentialGroup()
                                .addComponent(cboPosibles, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel30)
                                .addGap(18, 18, 18)
                                .addComponent(txtPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(tblDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnBuscatDieta)
                            .addComponent(btnGuardarDieta)
                            .addComponent(btnEliminarDieta)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        tblDietaLayout.setVerticalGroup(
            tblDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblDietaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tblDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tblDietaLayout.createSequentialGroup()
                        .addGroup(tblDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtNombreDieta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(tblDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tblDietaLayout.createSequentialGroup()
                                .addGroup(tblDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel14)
                                    .addComponent(cboTipoDieta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)
                                .addGroup(tblDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel16)
                                    .addComponent(lblEstadoDieta)))
                            .addGroup(tblDietaLayout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(tblDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel15)
                                    .addComponent(txtDuracionDieta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tblDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboPosibles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30)
                            .addComponent(txtPorcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(4, 4, 4)
                        .addGroup(tblDietaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRestarInsumo)
                            .addComponent(btnSumarInsumo)))
                    .addGroup(tblDietaLayout.createSequentialGroup()
                        .addComponent(btnGuardarDieta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscatDieta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminarDieta)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblmantenimientos.addTab("Dieta", tblDieta);

        tblProductor.setBackground(new java.awt.Color(101, 175, 84));

        jLabel21.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel21.setText("Nombre:");

        jLabel22.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel22.setText("Telefono:");

        jLabel23.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel23.setText("Observaciones:");

        txtObservacionesProductor.setColumns(15);
        txtObservacionesProductor.setRows(3);
        jScrollPane6.setViewportView(txtObservacionesProductor);
        txtObservacionesProductor.getAccessibleContext().setAccessibleParent(tblProductor);

        btnGuardarProductor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/save32.png"))); // NOI18N
        btnGuardarProductor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarProductorActionPerformed(evt);
            }
        });

        btnBuscarProductor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/search32.png"))); // NOI18N
        btnBuscarProductor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProductorActionPerformed(evt);
            }
        });

        btnEliminarProductor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/delete32.png"))); // NOI18N
        btnEliminarProductor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProductorActionPerformed(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel24.setText("Estado:");

        lblEstadoProductor.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblEstadoProductor.setText("...");

        jLabel27.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel27.setText("E-mail:");

        jLabel28.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel28.setText("DirecciÃ³n:");

        jLabel29.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel29.setText("Produce:");

        chkSI.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        chkSI.setText("SI");
        chkSI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSIActionPerformed(evt);
            }
        });

        chkNo.setFont(new java.awt.Font("Ubuntu", 0, 15)); // NOI18N
        chkNo.setText("NO");
        chkNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkNoActionPerformed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel36.setText("DI.CO.SE:");

        javax.swing.GroupLayout tblProductorLayout = new javax.swing.GroupLayout(tblProductor);
        tblProductor.setLayout(tblProductorLayout);
        tblProductorLayout.setHorizontalGroup(
            tblProductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblProductorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tblProductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tblProductorLayout.createSequentialGroup()
                        .addGroup(tblProductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tblProductorLayout.createSequentialGroup()
                                .addGroup(tblProductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel27)
                                    .addComponent(jLabel28))
                                .addGap(18, 18, 18)
                                .addGroup(tblProductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTelefonoProductor)
                                    .addComponent(txtMailProductor)
                                    .addComponent(txtDireccionProductor)))
                            .addGroup(tblProductorLayout.createSequentialGroup()
                                .addGroup(tblProductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel21)
                                    .addComponent(jLabel36))
                                .addGap(27, 27, 27)
                                .addGroup(tblProductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDicose)
                                    .addComponent(txtNombreProductor)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tblProductorLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkSI)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(chkNo)))
                        .addGap(18, 18, 18)
                        .addGroup(tblProductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGuardarProductor)
                            .addComponent(btnEliminarProductor)
                            .addComponent(btnBuscarProductor)))
                    .addGroup(tblProductorLayout.createSequentialGroup()
                        .addGroup(tblProductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addGroup(tblProductorLayout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(lblEstadoProductor))
                            .addComponent(jLabel24))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane6))
                .addGap(280, 280, 280))
        );
        tblProductorLayout.setVerticalGroup(
            tblProductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblProductorLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(tblProductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tblProductorLayout.createSequentialGroup()
                        .addGroup(tblProductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel21)
                            .addComponent(txtNombreProductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(tblProductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel36)
                            .addComponent(txtDicose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(tblProductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel22)
                            .addComponent(txtTelefonoProductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(tblProductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMailProductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel27))
                        .addGap(18, 18, 18)
                        .addGroup(tblProductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDireccionProductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28)))
                    .addGroup(tblProductorLayout.createSequentialGroup()
                        .addComponent(btnGuardarProductor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscarProductor)
                        .addGap(12, 12, 12)
                        .addComponent(btnEliminarProductor)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tblProductorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(lblEstadoProductor)
                    .addComponent(jLabel29)
                    .addComponent(chkSI)
                    .addComponent(chkNo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                .addContainerGap())
        );

        tblmantenimientos.addTab("Productor", tblProductor);

        tblStock.setBackground(new java.awt.Color(101, 175, 84));

        jLabel31.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel31.setText("Insumo:");

        txtInsumoStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtInsumoStockActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel32.setText("Stock Actual:");

        jLabel33.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel33.setText("ModificaciÃ³n:");

        btnEgresoStock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/prohibit32.png"))); // NOI18N
        btnEgresoStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEgresoStockActionPerformed(evt);
            }
        });

        btnIngresoStock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/add32.png"))); // NOI18N
        btnIngresoStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresoStockActionPerformed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel34.setText("Observaciones:");

        jScrollPane4.setViewportView(txtObservacionesStock);

        lblStockActual.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblStockActual.setText(". . .");

        btnBuscarStock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/search32.png"))); // NOI18N
        btnBuscarStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarStockActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout tblStockLayout = new javax.swing.GroupLayout(tblStock);
        tblStock.setLayout(tblStockLayout);
        tblStockLayout.setHorizontalGroup(
            tblStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblStockLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tblStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tblStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(tblStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane4)
                            .addGroup(tblStockLayout.createSequentialGroup()
                                .addComponent(jLabel31)
                                .addGap(18, 18, 18)
                                .addComponent(txtInsumoStock, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(tblStockLayout.createSequentialGroup()
                            .addComponent(jLabel32)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(lblStockActual))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tblStockLayout.createSequentialGroup()
                            .addComponent(jLabel33)
                            .addGap(19, 19, 19)
                            .addComponent(txtModificacionStock, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel34))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(tblStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnIngresoStock)
                    .addComponent(btnBuscarStock)
                    .addComponent(btnEgresoStock))
                .addGap(286, 286, 286))
        );
        tblStockLayout.setVerticalGroup(
            tblStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblStockLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tblStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscarStock, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tblStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel31)
                        .addComponent(txtInsumoStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tblStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tblStockLayout.createSequentialGroup()
                        .addGroup(tblStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32)
                            .addComponent(lblStockActual))
                        .addGap(18, 18, 18)
                        .addGroup(tblStockLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(txtModificacionStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 19, Short.MAX_VALUE)
                        .addGap(91, 91, 91))
                    .addGroup(tblStockLayout.createSequentialGroup()
                        .addComponent(btnIngresoStock)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEgresoStock)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        tblmantenimientos.addTab("Stock", tblStock);

        tblAnimal.setBackground(new java.awt.Color(101, 175, 84));

        jLabel5.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel5.setText("NÂ° Caravana:");

        jLabel6.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel6.setText("Peso Ingreso (Kg):");

        jLabel7.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel7.setText("Peso  Actual (Kg):");

        btnGuardarAnimal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/save32.png"))); // NOI18N
        btnGuardarAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarAnimalActionPerformed(evt);
            }
        });

        btnBuscarAnimal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/search32.png"))); // NOI18N
        btnBuscarAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarAnimalActionPerformed(evt);
            }
        });

        btnEliminarAnimal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Multimedia/delete32.png"))); // NOI18N
        btnEliminarAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarAnimalActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel8.setText("Estado:");

        lblEstadoAnimal.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblEstadoAnimal.setText("...");

        jLabel25.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel25.setText("CategorÃ­a:");

        jLabel26.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        jLabel26.setText("Productor:");

        cboCategoriaAnimal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cboProductor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout tblAnimalLayout = new javax.swing.GroupLayout(tblAnimal);
        tblAnimal.setLayout(tblAnimalLayout);
        tblAnimalLayout.setHorizontalGroup(
            tblAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblAnimalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tblAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tblAnimalLayout.createSequentialGroup()
                        .addGroup(tblAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25)
                            .addComponent(jLabel26)
                            .addComponent(jLabel8))
                        .addGap(30, 30, 30)
                        .addGroup(tblAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEstadoAnimal)
                            .addGroup(tblAnimalLayout.createSequentialGroup()
                                .addGroup(tblAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cboCategoriaAnimal, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cboProductor, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tblAnimalLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(txtNroAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(tblAnimalLayout.createSequentialGroup()
                                        .addGap(39, 39, 39)
                                        .addGroup(tblAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtPesoActAnimal)
                                            .addComponent(txtPesoIngAnimal))))
                                .addGroup(tblAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(tblAnimalLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(btnEliminarAnimal))
                                    .addGroup(tblAnimalLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(tblAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnBuscarAnimal)
                                            .addComponent(btnGuardarAnimal)))))))
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addGap(272, 272, 272))
        );
        tblAnimalLayout.setVerticalGroup(
            tblAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tblAnimalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tblAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tblAnimalLayout.createSequentialGroup()
                        .addGroup(tblAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtNroAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(tblAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtPesoIngAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(tblAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPesoActAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(tblAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboCategoriaAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25))
                        .addGap(18, 18, 18)
                        .addGroup(tblAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(cboProductor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tblAnimalLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnGuardarAnimal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscarAnimal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnEliminarAnimal)))
                .addGap(18, 18, 18)
                .addGroup(tblAnimalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lblEstadoAnimal))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblmantenimientos.addTab("Animal", tblAnimal);

        jLabel37.setText("Fecha Ingreso:");

        jLabel38.setText("Nro Tropa:");

        jLabel39.setText("Propietario:");

        jLabel40.setText("Animales:");

        txtFechaIngreso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFechaIngresoActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblDocumento.setFont(new java.awt.Font("Ubuntu", 1, 15)); // NOI18N
        lblDocumento.setText(". . .");

        btnAbrirDocumento.setText("Abrir");
        btnAbrirDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirDocumentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel38)
                                .addComponent(jLabel39))
                            .addGap(25, 25, 25)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtNtoTropa)
                                .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel37)
                            .addGap(18, 18, 18)
                            .addComponent(txtFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel40)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAbrirDocumento)
                        .addGap(18, 18, 18)
                        .addComponent(lblDocumento)))
                .addContainerGap(98, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(txtNtoTropa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(txtFechaIngreso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(lblDocumento)
                    .addComponent(btnAbrirDocumento))
                .addContainerGap(69, Short.MAX_VALUE))
        );

        tblmantenimientos.addTab("Tropa", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(tblmantenimientos, javax.swing.GroupLayout.PREFERRED_SIZE, 484, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tblmantenimientos, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarCorralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCorralActionPerformed
        try {
            if (txtNombreCorral.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debe ingresar el nombre del corral");
            } else if (txtCapacidadCorral.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debe ingresar la capacidad del corral");
            } else if (Integer.parseInt(txtCapacidadCorral.getText()) < 1) {
                JOptionPane.showMessageDialog(null, "Debe ingresar una capacidad del corral mayor a 0");
            } else {

                Corral c;
                Object o = buscar(Corral.class, txtNombreCorral.getText());
                if (o == null) {
                    c = new Corral();
                } else {
                    c = (Corral) o;
                }
                c.setEstado("ACTIVO");
                c.setCapacidad(Integer.parseInt(txtCapacidadCorral.getText()));
                c.setNombre(txtNombreCorral.getText());
                c.setObservaciones(txtObservacionesCorral.getText());

                if (o != null) {
                    int seleccion = JOptionPane.showOptionDialog(null,
                            "El corral ya existe. Si continÃºa se modificaran los datos por los ingresados, en caso de estar INACTIVO se activarÃ¡. \n Â¿Desea continuar?",
                            "Seleccione una opciÃ³n", // TÃ­tulo
                            JOptionPane.YES_NO_CANCEL_OPTION,
                            JOptionPane.QUESTION_MESSAGE,
                            null,
                            new Object[]{"Si", "No"},
                            "Si");
                    if (seleccion == 0) {
                        guardar(c);
                    }
                } else {
                    guardar(c);
                }
            }
            limpiarCampos(tblCorral);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Ocurrio un error inesperado, por favor verifique los datos ingresados");
        }
    }//GEN-LAST:event_btnGuardarCorralActionPerformed

    private void btnBuscarCorralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCorralActionPerformed
        Object o = buscar(Corral.class, txtNombreCorral.getText());
        Corral c = (Corral) o;
        if (c != null) {
            txtCapacidadCorral.setText(Integer.toString(c.getCapacidad()));
            txtObservacionesCorral.setText(c.getObservaciones());
            lblEstadoCorral.setText(c.getEstado());
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se ha encontrado ningun corral con el nombre:" + txtNombreCorral.getText() + ".\nPor favor verifiquelo.");
        }
    }//GEN-LAST:event_btnBuscarCorralActionPerformed

    private void btnEliminarCorralActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCorralActionPerformed
        try {

            Corral c = (Corral) buscar(Corral.class, txtNombreCorral.getText());
            if (c == null) {
                JOptionPane.showMessageDialog(rootPane, "No se ha encontrado ningun corral con el nombre:" + txtNombreCorral.getText() + ".\nPor favor verifiquelo.");
            } else {
                c.setEstado("INACTIVO");
                guardar(c);
                limpiarCampos(tblCorral);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnEliminarCorralActionPerformed

    private void btnGuardarAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarAnimalActionPerformed
        try {
            if (txtNroAnimal.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debe ingresar el nÃºmero de la caravana del animal");
            } else if (txtPesoIngAnimal.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debe ingresar un peso de ingreso vÃ¡lido");
            } else if (cboProductor.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(null, "Debe seleccionar un productor de la lista");
            } else if (cboCategoriaAnimal.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(null, "Debe seleccionar una categorÃ­a de la lista");
            } else {
                Animal a;
                Object o = buscar(Animal.class, txtNroAnimal.getText());
                if (o == null) {
                    a = new Animal();
                    a.setPesoActual(Integer.parseInt(txtPesoIngAnimal.getText()));
                    a.setPesoIngreso(Integer.parseInt(txtPesoIngAnimal.getText()));
                } else {
                    a = (Animal) o;
                    if (txtPesoActAnimal.getText().equals("")) {
                    } else {
                        a.setPesoActual(Integer.parseInt(txtPesoActAnimal.getText()));
                    }
                }

                a.setNroCaravana(Integer.parseInt(txtNroAnimal.getText()));
                a.setCategoria(
                        (CategoriaAnimal) cboCategoriaAnimal.getSelectedItem());
                a.setEstado(
                        "ACTIVO");
                a.setProductor(
                        (Productor) cboProductor.getSelectedItem());
                if (o
                        != null) {
                    int seleccion = JOptionPane.showOptionDialog(null,
                            "El animal ya existe. Si continÃºa se modificaran los datos por los ingresados, en caso de estar INACTIVO se activarÃ¡. \n Â¿Desea continuar?",
                            "Seleccione una opciÃ³n", // TÃ­tulo
                            JOptionPane.YES_NO_CANCEL_OPTION,
                            JOptionPane.QUESTION_MESSAGE,
                            null,
                            new Object[]{"Si", "No"},
                            "Si");
                    if (seleccion == 0) {
                        guardar(a);
                    }
                } else {
                    guardar(a);
                }
            }

            limpiarCampos(tblAnimal);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Ocurrio un error inesperado, por favor verifique los datos ingresados");


        }
    }//GEN-LAST:event_btnGuardarAnimalActionPerformed

    private void btnBuscarAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarAnimalActionPerformed
        Object o = buscar(Animal.class, txtNroAnimal.getText());
        Animal a = (Animal) o;
        if (a != null) {
            txtPesoActAnimal.setText(Integer.toString(a.getPesoActual()));
            txtPesoIngAnimal.setText(Integer.toString(a.getPesoIngreso()));
            lblEstadoAnimal.setText(a.getEstado());
            cboCategoriaAnimal.setSelectedItem(a.getCategoria());
            cboProductor.setSelectedItem(a.getProductor());
            txtPesoIngAnimal.disable();
        } else {
            JOptionPane.showMessageDialog(null, "No se ha encontrado ningun animal con el numero de caravana:" + txtNroAnimal.getText() + ".\nPor favor verifiquelo.");
        }
    }//GEN-LAST:event_btnBuscarAnimalActionPerformed
    private void btnEliminarAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarAnimalActionPerformed
        try {
            Animal a = (Animal) buscar(Animal.class, txtNroAnimal.getText());
            if (a == null) {
                JOptionPane.showMessageDialog(null, "No se ha encontrado ningun animal con el nro de caravana:" + txtNroAnimal.getText() + ".\nPor favor verifiquelo.");
            } else {
                a.setEstado("INACTIVO");
                guardar(a);
                limpiarCampos(tblAnimal);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnEliminarAnimalActionPerformed

    private void btnGuardarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCategoriaActionPerformed
        try {
            if (txtNombreCategoria.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debe ingresar el nombre de la categorÃ­a");
            } else if (txtDiasCategoria.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debe ingresar los dÃ­as de la estadÃ­a para la categorÃ­a");
            } else {
                CategoriaAnimal c;
                Object o = buscar(CategoriaAnimal.class, txtNombreCategoria.getText());
                if (o
                        == null) {
                    c = new CategoriaAnimal();
                } else {
                    c = (CategoriaAnimal) o;
                }

                c.setEstado(
                        "ACTIVO");
                c.setDias(Integer.parseInt(txtDiasCategoria.getText()));
                c.setNombre(txtNombreCategoria.getText());
                c.setObservaciones(txtObservacionesCategoria.getText());
                if (o
                        != null) {
                    int seleccion = JOptionPane.showOptionDialog(null,
                            "La categorÃ­a ya existe. Si continÃºa se modificaran los datos por los ingresados, en caso de estar INACTIVO se activarÃ¡. \n Â¿Desea continuar?",
                            "Seleccione una opciÃ³n", // TÃ­tulo
                            JOptionPane.YES_NO_CANCEL_OPTION,
                            JOptionPane.QUESTION_MESSAGE,
                            null,
                            new Object[]{"Si", "No"},
                            "Si");
                    if (seleccion == 0) {
                        guardar(c);
                    }
                } else {
                    guardar(c);
                }
            }
            limpiarCampos(tblCategoria);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error inesperado, por favor verifique los datos ingresados");


        }
    }//GEN-LAST:event_btnGuardarCategoriaActionPerformed

    private void btnBuscarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCategoriaActionPerformed
        Object o = buscar(CategoriaAnimal.class, txtNombreCategoria.getText());
        CategoriaAnimal c = (CategoriaAnimal) o;
        if (c != null) {
            txtDiasCategoria.setText(Integer.toString(c.getDias()));
            txtObservacionesCategoria.setText(c.getObservaciones());
            lblEstadoCategoria.setText(c.getEstado());
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se ha encontrado ninguna categorÃ­a con el nombre:" + txtNombreCategoria.getText() + ".\nPor favor verifiquelo.");
        }
    }//GEN-LAST:event_btnBuscarCategoriaActionPerformed
    private void btnEliminarCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCategoriaActionPerformed
        try {
            CategoriaAnimal c = (CategoriaAnimal) buscar(CategoriaAnimal.class, txtNombreCategoria.getText());
            if (c == null) {
                JOptionPane.showMessageDialog(rootPane, "No se ha encontrado ninguna categorÃ­a de animal con el nombre:" + txtNombreCategoria.getText() + ".\nPor favor verifiquelo.");
            } else {
                c.setEstado("INACTIVO");
                guardar(c);
            }
            limpiarCampos(tblCategoria);

        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnEliminarCategoriaActionPerformed

    private void btnGuardarDietaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarDietaActionPerformed
        try {
            if (txtNombreDieta.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debe ingresar el nombre de la dieta");
            } else if (cboTipoDieta.getSelectedItem() == null) {
                JOptionPane.showMessageDialog(null, "Debe seleccionar el tipo de la dieta");
            } else if (txtDuracionDieta.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debe ingresar la duraciÃ³n de la dieta");
            } else {
                Dieta d;
                Object o = buscar(Dieta.class, txtNombreDieta.getText());
                if (o == null) {
                    d = new Dieta();
                } else {
                    d = (Dieta) o;
                }

                d.setEstado("ACTIVO");
                if (!txtDuracionDieta.getText().equals("")) {
                    d.setDuracion(Integer.parseInt(txtDuracionDieta.getText()));
                }

                d.setNombre(txtNombreDieta.getText());
                d.setTipo((String) cboTipoDieta.getSelectedItem());
                d.setCosto(calcularCosto());
                Float suma = new Float("0.0");
                for (int i = 0;
                        i < mdlInsumosAsignados.getRowCount();
                        i++) {

                    Object aux = mdlInsumosAsignados.getValueAt(i, 2);

                    Float por = new Float("0.0");
                    if (aux.getClass() == String.class) {
                        por = Float.parseFloat((String) aux);
                    } else if (aux.getClass() == Float.class) {
                        por = (Float) aux;
                    }

                    suma += por;
                }
                if (mdlInsumosAsignados.getRowCount() > 0) {
                    if (suma == 100) {
                        if (o != null) {
                            int seleccion = JOptionPane.showOptionDialog(null,
                                    "La dieta ya existe. Si continÃºa se modificaran los datos por los ingresados, en caso de estar INACTIVO se activarÃ¡. \n Â¿Desea continuar?",
                                    "Seleccione una opciÃ³n", // TÃ­tulo
                                    JOptionPane.YES_NO_CANCEL_OPTION,
                                    JOptionPane.QUESTION_MESSAGE,
                                    null,
                                    new Object[]{"Si", "No"},
                                    "Si");
                            if (seleccion == 0) {

                                eliminarDetalle(d);
                                guardar(d);
                                d = (Dieta) buscar(Dieta.class, d.getNombre());
                                for (int i = 0; i < mdlInsumosAsignados.getRowCount(); i++) {
                                    DetalleDieta detalle = new DetalleDieta();
                                    Insumo ins = (Insumo) FachadaPersistencia.getInstancia().buscarId(Insumo.class, (Long) mdlInsumosAsignados.getValueAt(i, 0));
                                    detalle.setInsumo(ins);
                                    Object aux = mdlInsumosAsignados.getValueAt(i, 2);
                                    Float por = new Float("0.0");
                                    if (aux.getClass() == String.class) {
                                        por = Float.parseFloat((String) aux);
                                    } else if (aux.getClass() == Float.class) {
                                        por = (Float) aux;
                                    }
                                    /* if (por == 0.0) {
                                     String nom = (String) mdlInsumosAsignados.getValueAt(i, 1);
                                     FachadaPersistencia.getInstancia().eliminarUnDetalle(d, (Insumo) buscar(Insumo.class, nom));
                                     }*/
                                    detalle.setPorcentaje(por);
                                    detalle.setDieta(d);

                                    guardar(detalle);
                                }

                            }
                        } else {

                            eliminarDetalle(d);
                            guardar(d);
                            d = (Dieta) buscar(Dieta.class, d.getNombre());
                            for (int i = 0; i < mdlInsumosAsignados.getRowCount(); i++) {
                                DetalleDieta detalle = new DetalleDieta();
                                Insumo ins = (Insumo) FachadaPersistencia.getInstancia().buscarId(Insumo.class, (Long) mdlInsumosAsignados.getValueAt(i, 0));
                                detalle.setInsumo(ins);
                                Object aux = mdlInsumosAsignados.getValueAt(i, 2);
                                Float por = new Float("0.0");
                                if (aux.getClass() == String.class) {
                                    por = Float.parseFloat((String) aux);
                                } else if (aux.getClass() == Float.class) {
                                    por = (Float) aux;
                                }
                                /* if (por == 0.0) {
                                 String nom = (String) mdlInsumosAsignados.getValueAt(i, 1);
                                 FachadaPersistencia.getInstancia().eliminarUnDetalle(d, (Insumo) buscar(Insumo.class, nom));
                                 }*/
                                detalle.setPorcentaje(por);
                                detalle.setDieta(d);
                                guardar(detalle);
                            }

                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "La sumatoria de porcentajes de la composiciÃ³n de la dieta debe ser 100%");
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Debe asignar por lo menos un insumo para la dieta");
                }
                limpiarCampos(tblDieta);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Ocurrio un error inesperado. \nPor favor verifique los datos ingresados");
        }
    }//GEN-LAST:event_btnGuardarDietaActionPerformed
    private void btnBuscatDietaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscatDietaActionPerformed
        Object o = buscar(Dieta.class, txtNombreDieta.getText());
        Dieta d = (Dieta) o;

        limpiar_tabla(mdlInsumosAsignados);
        if (d
                != null) {
            txtDuracionDieta.setText(Integer.toString(d.getDuracion()));
            cboTipoDieta.setSelectedItem(d.getTipo());
            lblEstadoDieta.setText(d.getEstado());
            List<DetalleDieta> detalle = FachadaPersistencia.getInstancia().listarDetalle(d);
            for (DetalleDieta det : detalle) {
                mdlInsumosAsignados.addRow(new Object[]{det.getInsumo().getId(), det.getInsumo().getNombre(), det.getPorcentaje()});
                tblInsumos.setModel(mdlInsumosAsignados);
                mdcInsumosPosibles.removeElement(buscar(Insumo.class, det.getInsumo().getNombre()));
                cboPosibles.setModel(mdcInsumosPosibles);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se ha encontrado ninguna Dieta con el nombre:" + txtNombreCategoria.getText() + ".\nPor favor verifiquelo.");
        }
    }//GEN-LAST:event_btnBuscatDietaActionPerformed
    private void btnEliminarDietaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarDietaActionPerformed
        try {
            Dieta d = (Dieta) buscar(Dieta.class, txtNombreDieta.getText());
            if (d == null) {
                JOptionPane.showMessageDialog(rootPane, "No se ha encontrado ninguna dieta con el nombre:" + txtNombreDieta.getText() + ".\nPor favor verifiquelo.");
            } else {
                d.setEstado("INACTIVO");
                guardar(d);
            }
            limpiarCampos(tblDieta);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnEliminarDietaActionPerformed

    private void btnGuardarInsumoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarInsumoActionPerformed
        try {
            if (txtNombreInsumo.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debe ingresar el nombre del insumo");
            } else if (txtHumedadInsumo.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debe ingresar la hÃºmedad del insumo");
            } else if (txtPrecioInsumo.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debe ingresar el precio del insumo");
            } else {
                Insumo ins;
                Object o = buscar(Insumo.class, txtNombreInsumo.getText());
                if (o == null) {
                    ins = new Insumo();
                } else {
                    ins = (Insumo) o;
                }
                ins.setNombre(txtNombreInsumo.getText());
                ins.setPrecio(Integer.parseInt(txtPrecioInsumo.getText()));
                ins.setHumedad(Float.parseFloat(txtHumedadInsumo.getText()));
                ins.setStock(
                        0);
                ins.setEstado(
                        "ACTIVO");
                if (o
                        != null) {
                    int seleccion = JOptionPane.showOptionDialog(null,
                            "El insumo ya existe. Si continÃºa se modificaran los datos por los ingresados, en caso de estar INACTIVO se activarÃ¡. \n Â¿Desea continuar?",
                            "Seleccione una opciÃ³n", // TÃ­tulo
                            JOptionPane.YES_NO_CANCEL_OPTION,
                            JOptionPane.QUESTION_MESSAGE,
                            null,
                            new Object[]{"Si", "No"},
                            "Si");
                    if (seleccion == 0) {
                        guardar(ins);
                    }
                } else {
                    guardar(ins);
                }
            }
            limpiarCampos(tblInsumo);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Ocurrio un error inesperado. \nPor favor verifique los datos ingresados");








        }

    }//GEN-LAST:event_btnGuardarInsumoActionPerformed
    private void btnBuscarInsumoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarInsumoActionPerformed
        Object o = buscar(Insumo.class, txtNombreInsumo.getText());
        Insumo ins = (Insumo) o;
        if (ins
                != null) {
            txtNombreInsumo.setText(ins.getNombre());
            txtHumedadInsumo.setText(Float.toString(ins.getHumedad()));
            lblEstadoInsumo.setText(ins.getEstado());
            txtPrecioInsumo.setText(Integer.toString(ins.getPrecio()));
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se ha encontrado ningun Insumo con el nombre:" + txtNombreInsumo.getText() + ".\nPor favor verifiquelo.");
        }
    }//GEN-LAST:event_btnBuscarInsumoActionPerformed
    private void btnEliminarInsumoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarInsumoActionPerformed
        try {
            Insumo ins = (Insumo) buscar(Insumo.class, txtNombreInsumo.getText());
            if (ins == null) {
                JOptionPane.showMessageDialog(rootPane, "No se ha encontrado ningun insumo con el nombre:" + txtNombreInsumo.getText() + ".\nPor favor verifiquelo.");
            } else {
                ins.setEstado("INACTIVO");
                guardar(ins);
            }
            limpiarCampos(tblInsumo);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnEliminarInsumoActionPerformed

    private void btnRestarInsumoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestarInsumoActionPerformed
        restarInsumo();
    }//GEN-LAST:event_btnRestarInsumoActionPerformed

    private void btnSumarInsumoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSumarInsumoActionPerformed
        sumarInsumo();
    }//GEN-LAST:event_btnSumarInsumoActionPerformed

    private void txtInsumoStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtInsumoStockActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInsumoStockActionPerformed

    private void btnIngresoStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresoStockActionPerformed
        IngresoStock();
    }//GEN-LAST:event_btnIngresoStockActionPerformed

    private void btnEgresoStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEgresoStockActionPerformed
        EgresoStock();
    }//GEN-LAST:event_btnEgresoStockActionPerformed

    private void btnBuscarStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarStockActionPerformed
        Object o = buscar(Insumo.class, txtInsumoStock.getText());
        Insumo ins = (Insumo) o;
        if (ins
                != null) {
            lblStockActual.setText(Integer.toString(ins.getStock()));
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se ha encontrado ningun Insumo con el nombre:" + txtNombreInsumo.getText() + ".\nPor favor verifiquelo.");
        }
    }//GEN-LAST:event_btnBuscarStockActionPerformed

    private void btnEliminarProductorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProductorActionPerformed
        try {
            Productor p = (Productor) buscar(Productor.class, txtNombreProductor.getText());
            if (p == null) {
                JOptionPane.showMessageDialog(rootPane, "No se ha encontrado ningun productor con el nombre:" + txtNombreProductor.getText() + ".\nPor favor verifiquelo.");
            } else {
                p.setEstado(
                        "INACTIVO");
                guardar(p);
            }
            limpiarCampos(tblProductor);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnEliminarProductorActionPerformed

    private void btnBuscarProductorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProductorActionPerformed
        Productor p = (Productor) buscar(Productor.class, txtNombreProductor.getText());

        if (p
                != null) {
            txtNombreProductor.setText(p.getNombre());
            txtDireccionProductor.setText(p.getDireccion());
            txtDicose.setText(p.getDicose());
            txtMailProductor.setText(p.getEmail());
            txtObservacionesProductor.setText(p.getObservacion());
            lblEstadoProductor.setText(p.getEstado());
            txtTelefonoProductor.setText(Integer.toString(p.getTelefono()));
            if (p.isProduce()) {
                chkSI.setSelected(true);
                chkNo.setSelected(false);
            } else {
                chkSI.setSelected(false);
                chkNo.setSelected(true);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se ha encontrado ningun Productor con el nombre:" + txtNombreProductor.getText() + ".\nPor favor verifiquelo.");
        }
    }//GEN-LAST:event_btnBuscarProductorActionPerformed

    private void btnGuardarProductorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarProductorActionPerformed
        try {
            if (txtNombreProductor.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debe ingresar el nombre del productor");
            } else if (chkNo.isSelected() == false && chkSI.isSelected() == false) {
                JOptionPane.showMessageDialog(null, "Debe seleccionar si el productor produce o no");
            } else {
                Productor p;
                boolean aux;
                Object o = buscar(Productor.class, txtNombreProductor.getText());
                if (o
                        == null) {
                    p = new Productor();
                } else {
                    p = (Productor) o;
                }

                p.setNombre(txtNombreProductor.getText());
                p.setDireccion(txtDireccionProductor.getText());
                p.setEmail(txtMailProductor.getText());
                p.setObservacion(txtObservacionesProductor.getText());
                p.setDicose(txtDicose.getText());
                if (chkSI.isSelected()) {
                    aux = true;
                } else {
                    aux = false;
                }

                p.setEstado("ACTIVO");
                p.setProduce(aux);
                if (!txtTelefonoProductor.getText().equals("")) {
                    p.setTelefono(Integer.parseInt(txtTelefonoProductor.getText()));
                }
                if (o
                        != null) {
                    int seleccion = JOptionPane.showOptionDialog(null,
                            "El productor ya existe. Si continÃºa se modificaran los datos por los ingresados, en caso de estar INACTIVO se activarÃ¡. \n Â¿Desea continuar?",
                            "Seleccione una opciÃ³n", // TÃ­tulo
                            JOptionPane.YES_NO_CANCEL_OPTION,
                            JOptionPane.QUESTION_MESSAGE,
                            null,
                            new Object[]{"Si", "No"},
                            "Si");
                    if (seleccion == 0) {
                        guardar(p);
                    }
                } else {
                    guardar(p);
                }
            }
            limpiarCampos(tblProductor);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Ocurrio un error inesperado. \nPor favor verifique los datos ingresados");
        }
    }//GEN-LAST:event_btnGuardarProductorActionPerformed

    private void chkSIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSIActionPerformed
        desactivarcheck(chkSI);
    }//GEN-LAST:event_chkSIActionPerformed

    private void chkNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkNoActionPerformed
        desactivarcheck(chkNo);
    }//GEN-LAST:event_chkNoActionPerformed

    private void txtFechaIngresoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFechaIngresoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFechaIngresoActionPerformed

    private void btnAbrirDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirDocumentoActionPerformed
        JDialog jd = new Abrir(null, closable);
        jd.setVisible(true);
    }//GEN-LAST:event_btnAbrirDocumentoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrirDocumento;
    private javax.swing.JButton btnBuscarAnimal;
    private javax.swing.JButton btnBuscarCategoria;
    private javax.swing.JButton btnBuscarCorral;
    private javax.swing.JButton btnBuscarInsumo;
    private javax.swing.JButton btnBuscarProductor;
    private javax.swing.JButton btnBuscarStock;
    private javax.swing.JButton btnBuscatDieta;
    private javax.swing.JButton btnEgresoStock;
    private javax.swing.JButton btnEliminarAnimal;
    private javax.swing.JButton btnEliminarCategoria;
    private javax.swing.JButton btnEliminarCorral;
    private javax.swing.JButton btnEliminarDieta;
    private javax.swing.JButton btnEliminarInsumo;
    private javax.swing.JButton btnEliminarProductor;
    private javax.swing.JButton btnGuardarAnimal;
    private javax.swing.JButton btnGuardarCategoria;
    private javax.swing.JButton btnGuardarCorral;
    private javax.swing.JButton btnGuardarDieta;
    private javax.swing.JButton btnGuardarInsumo;
    private javax.swing.JButton btnGuardarProductor;
    private javax.swing.JButton btnIngresoStock;
    private javax.swing.JButton btnRestarInsumo;
    private javax.swing.JButton btnSumarInsumo;
    private javax.swing.JComboBox cboCategoriaAnimal;
    private javax.swing.JComboBox cboPosibles;
    private javax.swing.JComboBox cboProductor;
    private javax.swing.JComboBox cboTipoDieta;
    private javax.swing.JCheckBox chkNo;
    private javax.swing.JCheckBox chkSI;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblDocumento;
    private javax.swing.JLabel lblEstadoAnimal;
    private javax.swing.JLabel lblEstadoCategoria;
    private javax.swing.JLabel lblEstadoCorral;
    private javax.swing.JLabel lblEstadoDieta;
    private javax.swing.JLabel lblEstadoInsumo;
    private javax.swing.JLabel lblEstadoProductor;
    private javax.swing.JLabel lblStockActual;
    private javax.swing.JPanel tblAnimal;
    private javax.swing.JPanel tblCategoria;
    private javax.swing.JPanel tblCorral;
    private javax.swing.JPanel tblDieta;
    private javax.swing.JPanel tblInsumo;
    private javax.swing.JTable tblInsumos;
    private javax.swing.JPanel tblProductor;
    private javax.swing.JPanel tblStock;
    private javax.swing.JTabbedPane tblmantenimientos;
    private javax.swing.JTextField txtCapacidadCorral;
    private javax.swing.JTextField txtDiasCategoria;
    private javax.swing.JTextField txtDicose;
    private javax.swing.JTextField txtDireccionProductor;
    private javax.swing.JTextField txtDuracionDieta;
    private javax.swing.JTextField txtFechaIngreso;
    private javax.swing.JTextField txtHumedadInsumo;
    private javax.swing.JTextField txtInsumoStock;
    private javax.swing.JTextField txtMailProductor;
    private javax.swing.JTextField txtModificacionStock;
    private javax.swing.JTextField txtNombreCategoria;
    private javax.swing.JTextField txtNombreCorral;
    private javax.swing.JTextField txtNombreDieta;
    private javax.swing.JTextField txtNombreInsumo;
    private javax.swing.JTextField txtNombreProductor;
    private javax.swing.JTextField txtNroAnimal;
    private javax.swing.JTextField txtNtoTropa;
    private javax.swing.JTextArea txtObservacionesCategoria;
    private javax.swing.JTextArea txtObservacionesCorral;
    private javax.swing.JTextArea txtObservacionesProductor;
    private javax.swing.JTextPane txtObservacionesStock;
    private javax.swing.JTextField txtPesoActAnimal;
    private javax.swing.JTextField txtPesoIngAnimal;
    private javax.swing.JTextField txtPorcentaje;
    private javax.swing.JTextField txtPrecioInsumo;
    private javax.swing.JTextField txtTelefonoProductor;
    // End of variables declaration//GEN-END:variables

    public static Object guardar(Object object) {

        object = Persistencia.FachadaPersistencia.getInstancia().Guardar(object);
        return object;
    }

    public static Object buscar(Object o, Object obj) {

        Object c = new Object();
        c = Persistencia.FachadaPersistencia.getInstancia().buscar(o, obj);
        return c;
    }
    DefaultComboBoxModel<Object> mdcProductor = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<Object> mdcCategoria = new DefaultComboBoxModel<>();
    DefaultComboBoxModel<Object> mdcTipoDieta = new DefaultComboBoxModel<>();

    private void cargar_combos() {
        mdcProductor.removeAllElements();
        cboProductor.setModel(mdcProductor);
        cboProductor.setSelectedItem(null);
        List<Object> productores = FachadaPersistencia.getInstancia().listadoHabilitados(Productor.class);
        for (Object o : productores) {
            mdcProductor.addElement(o);
        }

        mdcCategoria.removeAllElements();

        cboCategoriaAnimal.setModel(mdcCategoria);

        cboCategoriaAnimal.setSelectedItem(
                null);
        List<Object> categorias = FachadaPersistencia.getInstancia().listadoHabilitados(CategoriaAnimal.class);
        for (Object o : categorias) {
            mdcCategoria.addElement(o);
        }

        mdcTipoDieta.removeAllElements();

        cboTipoDieta.setModel(mdcTipoDieta);

        cboTipoDieta.setSelectedItem(null);
        mdcTipoDieta.addElement("IniciaciÃ³n");
        mdcTipoDieta.addElement("AdaptaciÃ³n");
        mdcTipoDieta.addElement("Engorde");

        mdcInsumosPosibles.removeAllElements();
        cboPosibles.setModel(mdcInsumosPosibles);
        List<Object> listado = FachadaPersistencia.getInstancia().listadoHabilitados(Insumo.class);
        for (Object o : listado) {
            mdcInsumosPosibles.addElement(o);
        }
        mdcInsumosPosibles.setSelectedItem(null);

    }
    DefaultTableModel mdlInsumosAsignados = new DefaultTableModel(new String[]{"ID", "Insumo", "%"}, 0);
    DefaultComboBoxModel<Object> mdcInsumosPosibles = new DefaultComboBoxModel<>();

    private void cargar_listas() {
    }

    private void limpiar_tabla(DefaultTableModel d) {
        while (d.getRowCount() > 0) {
            d.removeRow(0);
        }

    }

    private void sumarInsumo() {
        if (cboPosibles.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar el insumo que desea agregar");
        } else if (txtPorcentaje.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Debe ingresar el porcentaje del insumo");
        } else if (Float.parseFloat(txtPorcentaje.getText()) > 0.0) {
            Insumo i = (Insumo) cboPosibles.getSelectedItem();
            Float aux = Float.parseFloat(txtPorcentaje.getText());
            mdlInsumosAsignados.addRow(new Object[]{i.getId(), i.getNombre(), aux});
            mdcInsumosPosibles.removeElement(cboPosibles.getSelectedItem());
            cboPosibles.setModel(mdcInsumosPosibles);
            tblInsumos.setModel(mdlInsumosAsignados);
        } else {
            JOptionPane.showMessageDialog(null, "Debe ingresar un porcentaje vÃ¡lido");
        }
    }

    private void restarInsumo() {
        int i = tblInsumos.getSelectedRow();
        if (i == -1) {
            JOptionPane.showMessageDialog(null, " seleccione una fila");
        } else {
            Insumo ins = (Insumo) buscar(Insumo.class, tblInsumos.getValueAt(i, 1));
            mdcInsumosPosibles.addElement(ins);
            cboPosibles.setModel(mdcInsumosPosibles);
            mdlInsumosAsignados.removeRow(i);
            tblInsumos.setModel(mdlInsumosAsignados);
        }
    }

    private Integer calcularCosto() {
        Integer aux = 0;
        return aux;

        //esta funcion debe recorrer la lista de insumos y sumar el costo
    }

    private void habilitar(String nombre) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void eliminarDetalle(Dieta d) {
        d = Persistencia.FachadaPersistencia.getInstancia().eliminardetalle(d);
    }

    private void IngresoStock() {
        try {
            if (txtInsumoStock.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debe ingresar el nombre del insumo");
            } else if (txtModificacionStock.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debe ingresar la variaciÃ³n de stock que sufrirÃ¡ el insumo");
            } else {
                Object o = buscar(Insumo.class, txtInsumoStock.getText());
                Insumo ins = (Insumo) o;
                CambioStock cs;
                if (o == null) {
                    JOptionPane.showMessageDialog(null, "No existe el Insumo, \nPor favor verifique");
                } else {
                    int stockAnterior = ins.getStock();
                    int stockPosterior = stockAnterior + Integer.parseInt(txtModificacionStock.getText());
                    cs = new CambioStock();
                    cs.setFecha(new Date());
                    cs.setInsumo(ins);
                    cs.setObservaciones(txtObservacionesStock.getText());
                    cs.setStockAnterior(stockAnterior);
                    cs.setStockPosterior(stockPosterior);
                    ins.setStock(stockPosterior);
                    guardar(cs);
                    guardar(ins);
                }
            }
            limpiarCampos(tblStock);

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Ocurrio un error inesperado, por favor verifique los datos ingresados");
        }

    }

    private void EgresoStock() {
        try {
            if (txtInsumoStock.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debe ingresar el nombre del insumo");
            } else if (txtModificacionStock.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Debe ingresar la variaciÃ³n de stock que sufrirÃ¡ el insumo");
            } else {
                Object o = buscar(Insumo.class, txtInsumoStock.getText());
                Insumo ins = (Insumo) o;
                CambioStock cs;
                if (o == null) {
                    JOptionPane.showMessageDialog(null, "No existe el Insumo, \nPor favor verifique");
                } else {
                    int stockAnterior = ins.getStock();
                    int stockPosterior = stockAnterior - Integer.parseInt(txtModificacionStock.getText());
                    cs = new CambioStock();
                    cs.setFecha(new Date());
                    cs.setInsumo(ins);
                    cs.setObservaciones(txtObservacionesStock.getText());
                    cs.setStockAnterior(stockAnterior);
                    cs.setStockPosterior(stockPosterior);
                    ins.setStock(stockPosterior);
                    guardar(cs);
                    guardar(ins);
                }
            }
            limpiarCampos(tblStock);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Ocurrio un error inesperado. \nPor favor verifique los datos ingresados");
        }
    }

    @Override
    public void update(Observable o, Object o1) {
        cargar_combos();
        cargar_listas();
    }

    public void limpiarCampos(JPanel jPanel) {
        for (int i = 0; jPanel.getComponents().length > i; i++) {
            if (jPanel.getComponents()[i] instanceof JTextField) {
                ((JTextField) jPanel.getComponents()[i]).setText("");
            }
        }
        txtObservacionesProductor.setText("");
        txtObservacionesCategoria.setText("");
        txtObservacionesCorral.setText("");
        txtObservacionesStock.setText("");
        txtPesoIngAnimal.enable();
    }

    private void desactivarcheck(JCheckBox check) {
        if (check == chkSI) {
            chkNo.setSelected(false);
        } else if (check == chkNo) {
            chkSI.setSelected(false);
        }
    }
}